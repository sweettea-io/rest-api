#!/bin/bash

# --- Build one or all Sweet Tea applications as either Go binaries or Docker images --- #

# ======== PARSE ARGS ======== #

this_dir="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"
app="$1"
build_env="$2"
build_format="$3"
go_build_output_dir="./bin"

# ======== VALIDATE ARGS ======== #

$this_dir/validate_arg "target" "$app" "server|migrate|worker|all"
$this_dir/validate_arg "env" "$build_env" "test|local|dev|staging|prod"
$this_dir/validate_arg "format" "$build_format" "image|binary"

# ======== BUILD APPS ======== #

# Create array of apps to build.
if [[ "$app" = "all" ]]; then
	declare -a apps_to_build=("server" "migrate" "worker")
else
	declare -a apps_to_build=("$app")
fi

# If building for Docker...
if [[ "$build_format" = "image" ]]; then
	# Build each app as a Docker image.
	for app_to_build in "${apps_to_build[@]}"; do
		uppercase_app=$( echo "$app_to_build" | tr "[:lower:]" "[:upper:]" )

		# Get the docker image name for the specified env and app.
		image_owner=$( $this_dir/env_reader "$build_env" "IMAGE_OWNER" )
		image_name=$( $this_dir/env_reader "$build_env" "${uppercase_app}_IMAGE_NAME" )
		image_version=$( $this_dir/latest_sha )

		echo "Building \"$app_to_build\" for \"$build_env\" environment into Docker image \"$image_name\"..."

		# Create a fresh .kubeconfig file to copy into the Docker image for the server and worker apps.
		if [ "$app_to_build" == "server" ] || [ "$app_to_build" == "worker" ]; then
			$this_dir/create_kubeconfig "$build_env"
		fi

		# Build the app image.
		docker build \
			--build-arg ROLE="$app_to_build" \
			--build-arg BUILD_ENV="$build_env" \
			-t "$image_owner/$image_name:$image_version" .
	done
else
	# Build each app as a Go binary.
	for app_to_build in "${apps_to_build[@]}"; do
		echo "Building \"$app_to_build\" into Go binary at $go_build_output_dir/$app_to_build..."
		go build -a -o "$go_build_output_dir/$app_to_build" "./cmd/$app_to_build"
	done
fi

echo "Done!"