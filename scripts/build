#!/bin/bash

# --- Build one or all Sweet Tea applications as either Go binaries or Docker images --- #

# Parse args
THIS_DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"
APP="$1"
BUILD_ENV="$2"
BUILD_FORMAT="$3"
GO_BUILD_OUTPUT_DIR="./bin"
declare -a APPS=("server" "migrate" "worker")

# Validate args
$THIS_DIR/validate_arg "$APP" "server|migrate|worker|all" "target"
$THIS_DIR/validate_arg "$BUILD_ENV" "test|local|dev|staging|prod" "env"
$THIS_DIR/validate_arg "$BUILD_FORMAT" "image|binary" "build format"

# Create array of apps to build.
if [[ "$APP" = "all" ]]; then
	APPS_TO_BUILD="$APPS"
else
	declare -a APPS_TO_BUILD=("$APP")
fi

# Build each app requested to be built.
if [[ "$BUILD_FORMAT" = "image" ]]; then
	# Build each app for Docker.
	for app in "${APPS_TO_BUILD[@]}"; do
		image_name=$( $THIS_DIR/env_reader "$app" "$BUILD_ENV" "IMAGE_NAME" )
		echo "Building \"$app\" for \"$BUILD_ENV\" environment into Docker image \"$image_name\"..."
		docker build --build-arg ROLE="$app" -t "$image_name" .
	done
else
	# Build each app as a Go binary.
	for app in "${APPS_TO_BUILD[@]}"; do
		echo "Building \"$app\" into Go binary at $GO_BUILD_OUTPUT_DIR/$app..."
		go build -a -o "$GO_BUILD_OUTPUT_DIR/$app" "./cmd/$app"
	done
fi

echo "Done!"