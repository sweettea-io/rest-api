#!/bin/bash

# --- Retrieve the value of an env variable given app name and env tier --- #
app_arg="$1"
env_tier="$2"
env_name="$3"
arg_name="$4"
envs_dir="./envs"
env_file_path="$envs_dir/$env_tier/$app_arg.env"

# Get all env vars if "all" is specified.
if [[ "$env_name" = "all" ]]; then
	# Get all env vars (ignore comments)
	all_envs=$( cat "$env_file_path" | grep "^[^#]" )

	# Convert all_envs into array
	IFS=$'\n' read -rd '' -a all_envs_arr <<<"$all_envs"

	# Format env pairs into args formatted with '--env="<env_pair>"'
	env_args=""
	for env_pair in "${all_envs_arr[@]}"; do
		env_args="$env_args--env=\"$env_pair\" "
	done

	echo "$env_args"
elif [[ "$env_name" ]]; then
	# If one env name is specified, return the value of that env var.
	env_var=$( cat "$env_file_path" | grep "$env_name=" )

	# If env var exists...
	if [[ "$env_var" ]]; then
		# Just get the value
		[[ $env_var =~ ($env_name=(.*)) ]]

		# Format as an arg if desired
		if [[ "$arg_name" ]]; then
			echo "--$arg_name${BASH_REMATCH[2]}"
		else
			echo "${BASH_REMATCH[2]}"
		fi
	else
		echo ""
	fi
else
	echo ""
fi