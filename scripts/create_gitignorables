#!/bin/bash

# --- Create files/dirs that were gitignored and should now exist --- #

ENV_DIR="./envs"
EXAMPLES_DIR="$ENV_DIR/examples"
ENV_DEFAULTS_PATH="$ENV_DIR/defaults.json"
declare -a apps=("migrate" "server" "worker")
declare -a env_tiers=("test" "local" "dev" "staging" "prod")

# Directories to upsert
declare -a dirs=(
	"./bin/"
	"$ENV_DIR"
	"$ENV_DIR/test/"
	"$ENV_DIR/local/"
	"$ENV_DIR/dev/"
	"$ENV_DIR/staging/"
	"$ENV_DIR/prod/"
)

# For each dir listed above...
for dir in "${dirs[@]}"; do
	# If dir doesn't exist already...
	if [[ ! -d "$dir" ]]; then
		echo "Creating directory $dir"

		# Create the dir.
		mkdir "$dir"
	fi
done

# Get all envs for each application from its respective <app>.example.env file.
server_example_content=$( cat "$EXAMPLES_DIR/server.example.env" )
migrate_example_content=$( cat "$EXAMPLES_DIR/migrate.example.env" )
worker_example_content=$( cat "$EXAMPLES_DIR/worker.example.env" )

# For each env tier...
for env_tier in "${env_tiers[@]}"; do
	# Skip this tier if the dir already has content
	env_tier_dir="$ENV_DIR/$env_tier"
	num_files=$( ls -l "$env_tier_dir" | wc -l )
	num_files=$((num_files-1))

	if [[ "$num_files" != "0" ]]; then
		echo "Directory \"$env_tier_dir\" not empty. Skipping env file creation..."
		continue
	fi

	# Empty example_envs
	IFS=$'\n' read -rd '' -a example_envs <<<""

	# For each app...
	for app in "${apps[@]}"; do
		# Get the example envs for this app
		case "$app" in
			server*)  example_content="$server_example_content";;
			migrate*) example_content="$migrate_example_content";;
			worker*)  example_content="$worker_example_content";;
		esac

		# Read envs into an array
		IFS=$'\n' read -rd '' -a example_envs <<<"$example_content"

		# Build up a string of env vars to write to an env config file.
		app_envs=""
		for env_name in "${example_envs[@]}"; do
			env_val=""

			# TODO: Attempt to find env default value from defaults.json

			# Append the new env var
			app_envs="$app_envs$env_name=$env_val\n"
		done

		app_env_file="$env_tier_dir/$app.env"

		echo "Creating env file \"$app_env_file\"."

		printf "$app_envs" > "$app_env_file"
	done
done