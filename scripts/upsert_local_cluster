#!/bin/bash

# --- Upsert local K8S cluster with minikube --- #

set -e # exit if any child script exits with non-zero status

# ======== PARSE ARGS ======== #

this_dir="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"
role="$1"
cluster_name="$2"
k8s_version="${3:-1.10.0}"

# ======== VALIDATIONS ======== #

# Validate args.
$this_dir/validate_arg "role" "$role" "core|build|train|api"
$this_dir/validate_arg "cluster_name" "$cluster_name"

# Ensure minikube is installed.
if [[ ! "$( which minikube )" ]]; then
	echo "Minikube not detected...run 'make install' and then try again."
	exit 1
fi

# ======== GET USABLE K8S VERSION ======== #

# Only add the k8s version arg if that version supported.
kubernetes_version_arg=""
# TODO: Figure out what the new command is for getting these versions
#if minikube get-k8s-versions | grep "v${k8s_version}$" &>/dev/null; then
#	kubernetes_version_arg="--kubernetes-version v$k8s_version"
#fi

# ======== CREATE LOCAL CLUSTER ======== #

# Embed cert data directly into kubeconfig rather than using paths.
minikube config set embed-certs true

# Start the cluster.
minikube start --profile "$cluster_name" "$kubernetes_version_arg"

# If creating the core cluster, also enable ingress.
if [[ "$role" == "core" ]]; then
	minikube addons enable ingress --profile "$cluster_name"
fi

echo "Successfully created cluster \"$cluster_name\"."
