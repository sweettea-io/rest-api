#!/bin/bash

# --- Upsert Kubernetes cluster on AWS --- #

# ======== PARSE ARGS ======== #

this_dir="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"
cluster_name="$1"
domain="$2"
hosted_zone_id="$3"
state="$4"
zones="$5"
master_size="$6"
node_size="$7"
node_count="$8"
image="$9"
k8s_version="${10}"
user_name="kops"
group_name="kops"

# ======== CREATE RESOURCES REQUIRED TO SUPPORT CLUSTER ======== #

# Ensure AWS environment variables are currently set.
if [ ! "$AWS_ACCESS_KEY_ID" ] || [ ! "$AWS_SECRET_ACCESS_KEY" ]; then
	echo "AWS environment variables not currently set.\nSet \"AWS_ACCESS_KEY_ID\" and \"AWS_SECRET_ACCESS_KEY\" and then try again."
	exit
fi

# Upsert AWS group.
$this_dir/upsert_group "$group_name"

# Upsert AWS user and attach to group.
$this_dir/upsert_user "$user_name" "$group_name"

# Upsert AWS access keypair for user.
$this_dir/upsert_access_key "$user_name"

# If state doesn't exist yet for cluster, create S3 bucket to serve that purpose.
if [[ ! "$state" ]]; then
	# Create name for S3 bucket, combining cluster name with a uuid.
	uuid=$( uuidgen | tr "[:upper:]" "[:lower:]" )
	uuid="${uuid:0:8}"
	bucket_name="$cluster_name-$uuid"

	# Create the bucket.
	$this_dir/create_bucket "$bucket_name"

	# Give state a value using new bucket name.
	state="s3://$bucket_name"
fi

# Upsert hosted zone.
$this_dir/upsert_hosted_zone "$cluster_name" "$domain" "$hosted_zone_id"

# ======== CREATE K8S CLUSTER ======== #

kops create cluster \
	--cloud "aws" \
	--name "$cluster_name.$domain" \
	--zones "$zones" \
	--master-size "$master_size" \
	--node-size "$node_size" \
	--node-count "$node_count" \
	--state "$state" \
	--image "$image" \
	--kubernetes-version "$k8s_version" \
	--yes