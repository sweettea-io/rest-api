#!/bin/bash

# --- Take steps necessary to publicize a K8S deployment to a publicly available SSL endpoint --- #

# ======== PARSE ARGS ======== #

this_dir="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"
env="$1"
name="$2"
subdomain="$3"

# ======== VALIDATE ARGS ======== #

$this_dir/validate_arg "env" "$env" "local|dev|staging|prod"
$this_dir/validate_arg "name" "$name"
$this_dir/validate_arg "subdomain" "$subdomain"

# ======== GET ENVS ======== #

# Get envs required to expose this service properly.
provider=$( $this_dir/env_reader "$env" "CLOUD_PROVIDER" )
ssl_cert=$( $this_dir/env_reader "$env" "WILDCARD_SSL_CERT_ARN" )
hosted_zone_id=$( $this_dir/env_reader "$env" "HOSTED_ZONE_ID" )
domain=$( $this_dir/env_reader "$env" "DOMAIN" )

# ======== VALIDATE ENVS ======== #

# TODO: validate these according to env=local or not

$this_dir/assert_env "CLOUD_PROVIDER" "$provider"
$this_dir/assert_env "WILDCARD_SSL_CERT_ARN" "$ssl_cert"
$this_dir/assert_env "HOSTED_ZONE_ID" "$hosted_zone_id"
$this_dir/assert_env "DOMAIN" "$domain"

# ======== CREATE & ANNOTATE SERVICE ======== #

# Expose deployment as service.
$this_dir/expose "$name"

# Hold your horses.
sleep 3

# Annotate service with SSL cert.
$this_dir/$provider/annotate_ssl_service "$name" "$ssl_cert"

# ======== FETCH SERVICE LOAD BALANCER URL ======== #

# Wait for load balancer url to become available
lb_url=""
until [[ "$lb_url" ]]; do
	echo "Waiting for load balancer url..."
	sleep 5
	lb_url=$( kubectl describe service "$name" | grep -i 'LoadBalancer Ingress' | awk '{print $3}' )
done

# ======== UPSERT CNAME RECORD ======== #

# Add CNAME record connecting the provided subdomain with the load balancer url.
$this_dir/$provider/upsert_cname_record "$hosted_zone_id" "$subdomain.$domain" "$lb_url"