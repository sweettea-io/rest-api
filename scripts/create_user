#!/bin/bash

# --- Create Sweet Tea User in database of specified environment --- #

# ======== PARSE ARGS ======== #

this_dir="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"
env="$1"
email="$2"
password="$3"
admin="$4"

# ======== VALIDATIONS ======== #

$this_dir/validate_arg "env" "$env" "local|dev|staging|prod"
$this_dir/validate_arg "admin" "$admin" "true|false"
$this_dir/validate_arg "email" "$email"
$this_dir/validate_arg "password" "$password"

if [[ "$env" == "local" ]]; then
	# Check with the executor that their local Core cluster is running.
	$this_dir/ensure_local_core_api_running
fi

# ======== PROMPT EXECUTOR USER FOR CREDENTIALS ======== #

executor_email=""
executor_password=""
has_user_acct=""

# Ask user if they have a user account already.
until [ "$( tr '[:upper:]' '[:lower:]' <<<$has_user_acct )" == "y" ] || [ "$( tr '[:upper:]' '[:lower:]' <<<$has_user_acct )" == "n" ]; do
	read -p "Do you have a Sweet Tea user account for this environment? (y/n): " has_user_acct
done

# If a user account already exists, prompt user for their email/pw
if [[ "$has_user_acct" == "y" ]]; then
	printf "Enter your user credentials.\n"

	until [[ "$executor_email" ]]; do
		read -p 'Email: ' executor_email
	done

	until [[ "$executor_password" ]]; do
		read -sp 'Password: ' executor_password
	done
else
	# If no users exist yet, then prompt user for the password they
	# used when creating the USER_CREATION_HASH for this env.
	printf "Enter the password used when generating the USER_CREATION_HASH for this environment.\n"

	until [[ "$executor_password" ]]; do
		read -sp 'Password: ' executor_password
	done
fi

# ======== PERFORM API CALL ======== #

payload="{
	\"executor_email\": \"$executor_email\",
	\"executor_password\": \"$executor_password\",
	\"new_email\": \"$email\",
	\"new_password\": \"$password\",
	\"admin\": $admin
}"

printf "\nCreating user...\n"

$this_dir/core_api_call "$env" "POST" "/users" "$payload"